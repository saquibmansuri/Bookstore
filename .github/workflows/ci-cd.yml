name: CI/CD Pipeline #This sets the name of CI/CD pipeline.

on:
  push: #This defines when the pipeline should run. here - any push to the main branch
    branches:
      - main

jobs:
  build: #This starts the definition of a job named build that will run on  GitHub-hosted Ubuntu environment
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code #This step checks out (downloads) your repository code to the runner's workspace.
      uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2 #This step sets up the .NET environment for your project
      with:
        dotnet-version: '7.0.x'
    
         
    #This step sets up Docker for use in your workflow and specifies the path to your Dockerfile  
    - name: Set up Docker for migrator
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile

    - name: Set up Docker for web
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile

    - name: Set up Docker for auth
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile

    - name: Set up Docker for httpapi
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile


    - name: Set up Docker for httpapi.Dockerfile
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: httpapi.Dockerfile

    - name: Set up Docker for httpapi.Dockerfile
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: httpapi.Dockerfile

    - name: Set up Docker for Dockerfile4
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile4

    - name: Set up Docker for httpapi
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile

    - name: Set up Docker for httpapi
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile


    - name: Set up Docker for httpapi.Dockerfile
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: httpapi.Dockerfile

    - name: Set up Docker for httpapi.Dockerfile
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: httpapi.Dockerfile

    - name: Set up Docker for Dockerfile4
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile4

    - name: Set up Docker for httpapi
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: Dockerfile

    - name: Set up Docker for httpapi.Dockerfile
      uses: docker/setup-buildx-action@v1
      with:
        dockerfile: httpapi.Dockerfile


    #This step builds a Docker image with the tag bookstore-app.

    - name: Build Docker image - Web
      run: docker build -t bookstore-web --target web -f Dockerfile .

    - name: Build Docker image - DbMigrator
      run: docker build -t bookstore-db-migrator --target migrator -f Dockerfile .

    - name: Build Docker image - HttpApi.Host
      run: docker build -t bookstore-http-api-host --target host -f Dockerfile .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver --target auth -f Dockerfile .


    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver -f auth.Dockerfile .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver -f auth.Dockerfile .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver -f Dockerfile4 .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver --target auth -f Dockerfile .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver --target auth -f Dockerfile .


    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver -f auth.Dockerfile .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver -f auth.Dockerfile .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver -f Dockerfile4 .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver --target auth -f Dockerfile .

    - name: Build Docker image - AuthServer
      run: docker build -t bookstore-authserver -f auth.Dockerfile .



    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    
    # This step logs in to Amazon Elastic Container Registry (ECR) to authenticate Docker for pushing images.  
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    
    #This step tags the Docker image with the appropriate ECR repository URL.
    - name: Tag Docker images
      run: |
        docker tag bookstore-web:latest ${{ secrets.AWS_ECR_REPOSITORY }}:web-latest
        docker tag bookstore-db-migrator:latest ${{ secrets.AWS_ECR_REPOSITORY }}:db-migrator-latest
        docker tag bookstore-http-api-host:latest ${{ secrets.AWS_ECR_REPOSITORY }}:http-api-host-latest
        docker tag bookstore-authserver:latest ${{ secrets.AWS_ECR_REPOSITORY }}:authserver-latest
       

      
    #This step pushes the tagged Docker image to the specified ECR repository.  
    - name: Push Docker images
      run: |
        docker push ${{ secrets.AWS_ECR_REPOSITORY }}:web-latest
        docker push ${{ secrets.AWS_ECR_REPOSITORY }}:db-migrator-latest
        docker push ${{ secrets.AWS_ECR_REPOSITORY }}:http-api-host-latest
        docker push ${{ secrets.AWS_ECR_REPOSITORY }}:authserver-latest
    
